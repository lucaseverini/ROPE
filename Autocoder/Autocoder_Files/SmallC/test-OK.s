     ****************************************************************
     ***  test.s
     ***  Generated by Small-C Compiler on 16-Mar-2015 3:01:22 AM
     ****************************************************************
     ****************************************************************

     READ      EQU  001                * Read area
     PUNCH     EQU  101                * Punch area
     PRINT     EQU  201                * Print area
     
     PRCPOS    DCW  000                * char position in print area
     PUCPOS    DCW  000                * char position in punch area
     PUNSIZ    DCW  @080@              * Size of punch area
     PRTSIZ    DCW  @132@              * Size of print area
     EOS       DCW  @'@                * End Of String char
     EOL       DCW  @;@                * End Of Line char

               ORG  87
     X1        DSA  0                  * INDEX REGISTER 1
               ORG  92
     X2        DSA  0                  * INDEX REGISTER 2
               ORG  97
     X3        DSA  0                  * INDEX REGISTER 3
     
     * I need a single digit flag - should I replace this with a DA?
     RF        EQU  340
     
     ****************************************************************
     
     * SET THE START POSITION OF VARIABLES' DATA

               ORG  601
               DCW  @00100@

               ORG  606
               DCW  @00200@

               ORG  611
               DCW  @00000@

               ORG  616
               DCW  @619@

               ORG  619
               DCW  @A@
               DCW  @A@
               DCW  @A@
               DCW  @A@
               DCW  @A@
               DCW  @A@
               DCW  @A@
               DCW  @A@
               DCW  @'@

               ORG  631
               DCW  @634@

               ORG  634
               DCW  @A@
               DCW  @A@
               DCW  @A@
               DCW  @A@
               DCW  @A@
               DCW  @A@
               DCW  @A@
               DCW  @A@
               DCW  @'@

               ORG  643
               DCW  @00001@

               ORG  648
               DCW  @651@

               ORG  651
               DCW  @B@
               DCW  @B@
               DCW  @B@
               DCW  @B@
               DCW  @B@
               DCW  @B@
               DCW  @B@
               DCW  @B@
               DCW  @'@

               ORG  660
               DCW  @A@
               DCW  @B@
               DCW  @C@
               DCW  @D@
               DCW  @E@
               DCW  @F@
               DCW  @G@
               DCW  @H@
               DCW  @'@

     * SET THE START POSITION OF CODE
               ORG  800
     START     NOP  

     * SET THE STACK POINTER
               SBR  X2,400
               MCW  X2,X3

               B    LBAAAA             * Jump to function main
               H                       * Program executed. System halted.

     ********************************************************************************
     * FunctionDefinition(main)
     ********************************************************************************
     LBAAAA    SBR  3+X3
               SW   1+X3
               CW   2+X3
               CW   3+X3

     ***************************************
     * BeginBlock [Block LCAAAA:null]
               LCA  @00100@,8+X3
               LCA  @660@,11+X3
               MA   @011@,X2
     * Assignment (x3 = (x0 + x1))
     * Addition (x0 + x1)
     * StaticVariableExpression (x0 : 605)
     * Push (605:5)
               MA   @005@,X2
               LCA  605,0+X2
     * StaticVariableExpression (x1 : 610)
     * Push (610:5)
               MA   @005@,X2
               LCA  610,0+X2
               A    0+X2,15995+X2
     * Pop (5)
               MA   @I9E@,X2
     * Push (@615@:3)
               MA   @003@,X2
               LCA  @615@,0+X2
     * Pop (X1:3)
               LCA  0+X2,X1
               MA   @I9G@,X2
     * Pop (0+X1:5)
               LCA  0+X2,0+X1
               MA   @I9E@,X2
     * Assignment (c1 = c0)
     * StaticVariableExpression (c0 : 618)
     * Push (618:3)
               MA   @003@,X2
               LCA  618,0+X2
     * Push (@630@:3)
               MA   @003@,X2
               LCA  @630@,0+X2
     * Pop (X1:3)
               LCA  0+X2,X1
               MA   @I9G@,X2
     * Pop (0+X1:3)
               LCA  0+X2,0+X1
               MA   @I9G@,X2
     * Assignment (c1 = c4)
     * VariableExpression (c4 : 11+X3)
     * Push (11+X3:3)
               MA   @003@,X2
               LCA  11+X3,0+X2
     * Push (@630@:3)
               MA   @003@,X2
               LCA  @630@,0+X2
     * Pop (X1:3)
               LCA  0+X2,X1
               MA   @I9G@,X2
     * Pop (0+X1:3)
               LCA  0+X2,0+X1
               MA   @I9G@,X2
     * Assignment (x3 = x4)
     * VariableExpression (x4 : 8+X3)
     * Push (8+X3:5)
               MA   @005@,X2
               LCA  8+X3,0+X2
     * Push (@615@:3)
               MA   @003@,X2
               LCA  @615@,0+X2
     * Pop (X1:3)
               LCA  0+X2,X1
               MA   @I9G@,X2
     * Pop (0+X1:5)
               LCA  0+X2,0+X1
               MA   @I9E@,X2
     LCAAAA    NOP                     * Return
               MA   @I8I@,X2
               MCW  @ @,RF             * Clear the Return Flag
     * EndBlock [Block LCAAAA:null]
     ***************************************

               LCA  3+X3,X1
               B    0+X1               * Jump back to caller


               END  START              * End of program code.
